/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package cat.diba.oficinasvivienda.model.impl;

import cat.diba.oficinasvivienda.model.OficinaServicioMunicipio;
import cat.diba.oficinasvivienda.model.OficinaServicioMunicipioModel;
import cat.diba.oficinasvivienda.service.persistence.OficinaServicioMunicipioPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the OficinaServicioMunicipio service. Represents a row in the &quot;OficinaServicioMunicipio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link cat.diba.oficinasvivienda.model.OficinaServicioMunicipioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OficinaServicioMunicipioImpl}.
 * </p>
 *
 * @author gonzalezscr
 * @see OficinaServicioMunicipioImpl
 * @see cat.diba.oficinasvivienda.model.OficinaServicioMunicipio
 * @see cat.diba.oficinasvivienda.model.OficinaServicioMunicipioModel
 * @generated
 */
public class OficinaServicioMunicipioModelImpl extends BaseModelImpl<OficinaServicioMunicipio>
	implements OficinaServicioMunicipioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a oficina servicio municipio model instance should use the {@link cat.diba.oficinasvivienda.model.OficinaServicioMunicipio} interface instead.
	 */
	public static final String TABLE_NAME = "OficinaServicioMunicipio";
	public static final Object[][] TABLE_COLUMNS = {
			{ "idOficina", Types.BIGINT },
			{ "idServicio", Types.BIGINT },
			{ "codigoIne", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table OficinaServicioMunicipio (idOficina LONG not null,idServicio LONG not null,codigoIne VARCHAR(75) not null,primary key (idOficina, idServicio, codigoIne))";
	public static final String TABLE_SQL_DROP = "drop table OficinaServicioMunicipio";
	public static final String ORDER_BY_JPQL = " ORDER BY oficinaServicioMunicipio.id.idOficina ASC, oficinaServicioMunicipio.id.idServicio ASC, oficinaServicioMunicipio.id.codigoIne ASC";
	public static final String ORDER_BY_SQL = " ORDER BY OficinaServicioMunicipio.idOficina ASC, OficinaServicioMunicipio.idServicio ASC, OficinaServicioMunicipio.codigoIne ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.cat.diba.oficinasvivienda.model.OficinaServicioMunicipio"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.cat.diba.oficinasvivienda.model.OficinaServicioMunicipio"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.cat.diba.oficinasvivienda.model.OficinaServicioMunicipio"));

	public OficinaServicioMunicipioModelImpl() {
	}

	@Override
	public OficinaServicioMunicipioPK getPrimaryKey() {
		return new OficinaServicioMunicipioPK(_idOficina, _idServicio,
			_codigoIne);
	}

	@Override
	public void setPrimaryKey(OficinaServicioMunicipioPK primaryKey) {
		setIdOficina(primaryKey.idOficina);
		setIdServicio(primaryKey.idServicio);
		setCodigoIne(primaryKey.codigoIne);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new OficinaServicioMunicipioPK(_idOficina, _idServicio,
			_codigoIne);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((OficinaServicioMunicipioPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return OficinaServicioMunicipio.class;
	}

	@Override
	public String getModelClassName() {
		return OficinaServicioMunicipio.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idOficina", getIdOficina());
		attributes.put("idServicio", getIdServicio());
		attributes.put("codigoIne", getCodigoIne());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idOficina = (Long)attributes.get("idOficina");

		if (idOficina != null) {
			setIdOficina(idOficina);
		}

		Long idServicio = (Long)attributes.get("idServicio");

		if (idServicio != null) {
			setIdServicio(idServicio);
		}

		String codigoIne = (String)attributes.get("codigoIne");

		if (codigoIne != null) {
			setCodigoIne(codigoIne);
		}
	}

	@Override
	public long getIdOficina() {
		return _idOficina;
	}

	@Override
	public void setIdOficina(long idOficina) {
		_idOficina = idOficina;
	}

	@Override
	public long getIdServicio() {
		return _idServicio;
	}

	@Override
	public void setIdServicio(long idServicio) {
		_idServicio = idServicio;
	}

	@Override
	public String getCodigoIne() {
		if (_codigoIne == null) {
			return StringPool.BLANK;
		}
		else {
			return _codigoIne;
		}
	}

	@Override
	public void setCodigoIne(String codigoIne) {
		_codigoIne = codigoIne;
	}

	@Override
	public OficinaServicioMunicipio toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OficinaServicioMunicipio)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OficinaServicioMunicipioImpl oficinaServicioMunicipioImpl = new OficinaServicioMunicipioImpl();

		oficinaServicioMunicipioImpl.setIdOficina(getIdOficina());
		oficinaServicioMunicipioImpl.setIdServicio(getIdServicio());
		oficinaServicioMunicipioImpl.setCodigoIne(getCodigoIne());

		oficinaServicioMunicipioImpl.resetOriginalValues();

		return oficinaServicioMunicipioImpl;
	}

	@Override
	public int compareTo(OficinaServicioMunicipio oficinaServicioMunicipio) {
		OficinaServicioMunicipioPK primaryKey = oficinaServicioMunicipio.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OficinaServicioMunicipio)) {
			return false;
		}

		OficinaServicioMunicipio oficinaServicioMunicipio = (OficinaServicioMunicipio)obj;

		OficinaServicioMunicipioPK primaryKey = oficinaServicioMunicipio.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<OficinaServicioMunicipio> toCacheModel() {
		OficinaServicioMunicipioCacheModel oficinaServicioMunicipioCacheModel = new OficinaServicioMunicipioCacheModel();

		oficinaServicioMunicipioCacheModel.idOficina = getIdOficina();

		oficinaServicioMunicipioCacheModel.idServicio = getIdServicio();

		oficinaServicioMunicipioCacheModel.codigoIne = getCodigoIne();

		String codigoIne = oficinaServicioMunicipioCacheModel.codigoIne;

		if ((codigoIne != null) && (codigoIne.length() == 0)) {
			oficinaServicioMunicipioCacheModel.codigoIne = null;
		}

		return oficinaServicioMunicipioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{idOficina=");
		sb.append(getIdOficina());
		sb.append(", idServicio=");
		sb.append(getIdServicio());
		sb.append(", codigoIne=");
		sb.append(getCodigoIne());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("cat.diba.oficinasvivienda.model.OficinaServicioMunicipio");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idOficina</column-name><column-value><![CDATA[");
		sb.append(getIdOficina());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idServicio</column-name><column-value><![CDATA[");
		sb.append(getIdServicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigoIne</column-name><column-value><![CDATA[");
		sb.append(getCodigoIne());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = OficinaServicioMunicipio.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			OficinaServicioMunicipio.class
		};
	private long _idOficina;
	private long _idServicio;
	private String _codigoIne;
	private OficinaServicioMunicipio _escapedModel;
}